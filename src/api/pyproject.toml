[project]
name = "qualicharge"
version = "0.27.0"
requires-python = "~=3.13.5"
dependencies = [
    "alembic==1.16.4",
    "annotated-types==0.7.0",
    "cachetools==6.1.0",
    "email-validator==2.2.0",
    "fastapi==0.116.1",
    "geoalchemy2[shapely]==0.18.0",
    "geopandas==1.1.1",
    "httpx[cli]==0.28.1",
    "pandas==2.3.1",
    "passlib[bcrypt]==1.7.4",
    "postgresql-audit==0.17.1",
    "psycopg[pool, binary]==3.2.9",
    "pyarrow==21.0.0",
    "pydantic==2.11.7",
    "pydantic-extra-types[all]==2.10.5",
    "pydantic-settings==2.10.1",
    "pyinstrument==5.0.3",
    "pyjwt==2.10.1",
    "python-multipart==0.0.20",
    "questionary==2.1.0",
    "sentry-sdk[fastapi]==2.33.2",
    "sqlalchemy-timescaledb==0.4.1",
    "sqlalchemy-utils==0.41.2",
    "sqlmodel==0.0.24",
    "typer==0.16.0",
    "uvicorn[standard]",
]

[project.scripts]
qcm = "qualicharge.cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black==25.1.0",
    "csvkit==2.1.0",
    "honcho==2.0.0",
    "locust==2.37.14",
    "mypy==1.17.0",
    "pandas-stubs==2.3.0.250703",
    "polyfactory==2.22.1",
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
    "pytest-httpx==0.35.0",
    "ruff==0.12.4",
    "types-cachetools==6.1.0.20250717",
    "types-passlib==1.7.7.20250602",
    "types-python-jose==3.5.0.20250531",
    "types-requests==2.32.4.20250611",
]

[tool.uv]
package = true

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"

[tool.uv.sources]
qualicharge = { path = ".", editable = true }

[tool.coverage.run]
omit = [
  "qualicharge/migrations/*"
]

[tool.pytest.ini_options]
addopts = "-v --cov-report term-missing --cov=qualicharge"
python_files = [
    "test_*.py",
    "tests.py",
]
testpaths = [
    "tests",
]

[tool.ruff]
target-version = "py312"
# Exclude a variety of commonly ignored directories.
exclude = [
  "migrations",
]

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "D",  # pydocstyle
    "E",  # pycodestyle error
    "F",  # Pyflakes
    "I",  # Isort
    "ISC",  # flake8-implicit-str-concat
    "PLC",  # Pylint Convention
    "PLE",  # Pylint Error
    "PLR",  # Pylint Refactor
    "PLW",  # Pylint Warning
    "RUF100",  # Ruff unused-noqa
    "S",  # flake8-bandit
    "T20", # flake8-print
    "W",  # pycodestyle warning
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # use of assert
]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
  "fastapi.Depends",
  "fastapi.params.Depends",
  "fastapi.params.Query",
  "fastapi.Query",
]

[tool.mypy]
plugins = "pydantic.mypy"
files = "./**/*.py"
exclude = [
  "qualicharge/migrations/"
]

[[tool.mypy.overrides]]
module = [
  "postgresql_audit.*",
  "shapely.*",
  "sqlalchemy_utils.*",
]
ignore_missing_imports = true

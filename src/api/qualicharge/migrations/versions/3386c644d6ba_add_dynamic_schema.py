"""add dynamic schema

Revision ID: 3386c644d6ba
Revises: 8580168c2cef
Create Date: 2024-05-07 10:13:56.725650

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "3386c644d6ba"
down_revision: Union[str, None] = "8580168c2cef"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "session",
        sa.Column("energy", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("start", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end", sa.DateTime(timezone=True), nullable=False),
        sa.Column("point_de_charge_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.CheckConstraint("created_at <= updated_at", name="pre-creation-update"),
        sa.ForeignKeyConstraint(
            ["point_de_charge_id"],
            ["pointdecharge.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        timescaledb_hypertable={"time_column_name": "start"},
    )
    op.create_table(
        "status",
        sa.Column(
            "etat_pdc",
            sa.Enum("EN_SERVICE", "HORS_SERVICE", "INCONNU", name="etatpdcenum"),
            nullable=False,
        ),
        sa.Column(
            "occupation_pdc",
            sa.Enum("LIBRE", "OCCUPE", "RESERVE", "INCONNU", name="occupationpdcenum"),
            nullable=False,
        ),
        sa.Column(
            "etat_prise_type_2",
            sa.Enum("FONCTIONNEL", "HORS_SERVICE", "INCONNU", name="etatpriseenum"),
            nullable=True,
        ),
        sa.Column(
            "etat_prise_type_combo_ccs",
            sa.Enum("FONCTIONNEL", "HORS_SERVICE", "INCONNU", name="etatpriseenum"),
            nullable=True,
        ),
        sa.Column(
            "etat_prise_type_chademo",
            sa.Enum("FONCTIONNEL", "HORS_SERVICE", "INCONNU", name="etatpriseenum"),
            nullable=True,
        ),
        sa.Column(
            "etat_prise_type_ef",
            sa.Enum("FONCTIONNEL", "HORS_SERVICE", "INCONNU", name="etatpriseenum"),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("horodatage", sa.DateTime(timezone=True), nullable=False),
        sa.Column("point_de_charge_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.CheckConstraint("created_at <= updated_at", name="pre-creation-update"),
        sa.ForeignKeyConstraint(
            ["point_de_charge_id"],
            ["pointdecharge.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        timescaledb_hypertable={"time_column_name": "horodatage"},
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("status")
    op.drop_table("session")
    # ### end Alembic commands ###

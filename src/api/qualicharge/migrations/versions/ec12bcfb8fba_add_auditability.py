"""Add auditability

Revision ID: ec12bcfb8fba
Revises: 4b99d15436b0
Create Date: 2025-01-30 15:23:57.665931

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "ec12bcfb8fba"
down_revision: Union[str, None] = "4b99d15436b0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "audit",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("author_id", sa.Uuid(), nullable=False),
        sa.Column("target_table", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("target_id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("changes", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("amenageur", sa.Column("created_by_id", sa.Uuid(), nullable=True))
    op.add_column("amenageur", sa.Column("updated_by_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "amenageur", "user", ["created_by_id"], ["id"])
    op.create_foreign_key(None, "amenageur", "user", ["updated_by_id"], ["id"])
    op.add_column("enseigne", sa.Column("created_by_id", sa.Uuid(), nullable=True))
    op.add_column("enseigne", sa.Column("updated_by_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "enseigne", "user", ["updated_by_id"], ["id"])
    op.create_foreign_key(None, "enseigne", "user", ["created_by_id"], ["id"])
    op.add_column("group", sa.Column("created_by_id", sa.Uuid(), nullable=True))
    op.add_column("group", sa.Column("updated_by_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "group", "user", ["created_by_id"], ["id"])
    op.create_foreign_key(None, "group", "user", ["updated_by_id"], ["id"])
    op.add_column("localisation", sa.Column("created_by_id", sa.Uuid(), nullable=True))
    op.add_column("localisation", sa.Column("updated_by_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "localisation", "user", ["created_by_id"], ["id"])
    op.create_foreign_key(None, "localisation", "user", ["updated_by_id"], ["id"])
    op.add_column("operateur", sa.Column("created_by_id", sa.Uuid(), nullable=True))
    op.add_column("operateur", sa.Column("updated_by_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "operateur", "user", ["created_by_id"], ["id"])
    op.create_foreign_key(None, "operateur", "user", ["updated_by_id"], ["id"])
    op.add_column("pointdecharge", sa.Column("created_by_id", sa.Uuid(), nullable=True))
    op.add_column("pointdecharge", sa.Column("updated_by_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "pointdecharge", "user", ["created_by_id"], ["id"])
    op.create_foreign_key(None, "pointdecharge", "user", ["updated_by_id"], ["id"])
    op.add_column("session", sa.Column("created_by_id", sa.Uuid(), nullable=True))
    op.add_column("session", sa.Column("updated_by_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "session", "user", ["updated_by_id"], ["id"])
    op.create_foreign_key(None, "session", "user", ["created_by_id"], ["id"])
    op.add_column("station", sa.Column("created_by_id", sa.Uuid(), nullable=True))
    op.add_column("station", sa.Column("updated_by_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "station", "user", ["updated_by_id"], ["id"])
    op.create_foreign_key(None, "station", "user", ["created_by_id"], ["id"])
    op.add_column("status", sa.Column("created_by_id", sa.Uuid(), nullable=True))
    op.add_column("status", sa.Column("updated_by_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "status", "user", ["updated_by_id"], ["id"])
    op.create_foreign_key(None, "status", "user", ["created_by_id"], ["id"])
    op.add_column("user", sa.Column("created_by_id", sa.Uuid(), nullable=True))
    op.add_column("user", sa.Column("updated_by_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "user", "user", ["created_by_id"], ["id"])
    op.create_foreign_key(None, "user", "user", ["updated_by_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user", type_="foreignkey")
    op.drop_constraint(None, "user", type_="foreignkey")
    op.drop_column("user", "updated_by_id")
    op.drop_column("user", "created_by_id")
    op.drop_constraint(None, "status", type_="foreignkey")
    op.drop_constraint(None, "status", type_="foreignkey")
    op.drop_column("status", "updated_by_id")
    op.drop_column("status", "created_by_id")
    op.drop_constraint(None, "station", type_="foreignkey")
    op.drop_constraint(None, "station", type_="foreignkey")
    op.drop_column("station", "updated_by_id")
    op.drop_column("station", "created_by_id")
    op.drop_constraint(None, "session", type_="foreignkey")
    op.drop_constraint(None, "session", type_="foreignkey")
    op.drop_column("session", "updated_by_id")
    op.drop_column("session", "created_by_id")
    op.drop_constraint(None, "pointdecharge", type_="foreignkey")
    op.drop_constraint(None, "pointdecharge", type_="foreignkey")
    op.drop_column("pointdecharge", "updated_by_id")
    op.drop_column("pointdecharge", "created_by_id")
    op.drop_constraint(None, "operateur", type_="foreignkey")
    op.drop_constraint(None, "operateur", type_="foreignkey")
    op.drop_column("operateur", "updated_by_id")
    op.drop_column("operateur", "created_by_id")
    op.drop_constraint(None, "localisation", type_="foreignkey")
    op.drop_constraint(None, "localisation", type_="foreignkey")
    op.drop_column("localisation", "updated_by_id")
    op.drop_column("localisation", "created_by_id")
    op.drop_constraint(None, "group", type_="foreignkey")
    op.drop_constraint(None, "group", type_="foreignkey")
    op.drop_column("group", "updated_by_id")
    op.drop_column("group", "created_by_id")
    op.drop_constraint(None, "enseigne", type_="foreignkey")
    op.drop_constraint(None, "enseigne", type_="foreignkey")
    op.drop_column("enseigne", "updated_by_id")
    op.drop_column("enseigne", "created_by_id")
    op.drop_constraint(None, "amenageur", type_="foreignkey")
    op.drop_constraint(None, "amenageur", type_="foreignkey")
    op.drop_column("amenageur", "updated_by_id")
    op.drop_column("amenageur", "created_by_id")
    op.drop_table("audit")
    # ### end Alembic commands ###

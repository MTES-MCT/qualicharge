# Generated by Django 5.1.8 on 2025-04-15 14:00

import apps.consent.utils
import apps.consent.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("qcd_consent", "0001_initial"),
        ("qcd_consent", "0002_alter_consent_managers_alter_consent_delivery_point"),
        ("qcd_consent", "0003_alter_consent_managers_alter_consent_end_and_more"),
        ("qcd_consent", "0004_consent_contractual_fields"),
        ("qcd_consent", "0005_consent_contract_holder_email_and_more"),
        ("qcd_consent", "0006_remove_consent_contract_holder_email_and_more"),
        ("qcd_consent", "0007_consent_id_station_itinerance_and_more"),
        ("qcd_consent", "0008_alter_consent_options_alter_consent_start"),
        ("qcd_consent", "0009_alter_consent_options_and_more"),
    ]

    initial = True

    dependencies = [
        ("qcd_core", "0001_squashed_0010_station"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Consent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="updated at"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("AWAITING", "Awaiting"),
                            ("VALIDATED", "Validated"),
                            ("REVOKED", "Revoked"),
                        ],
                        default="AWAITING",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "start",
                    models.DateTimeField(
                        default=apps.consent.utils.consent_start_date,
                        verbose_name="start date",
                    ),
                ),
                (
                    "end",
                    models.DateTimeField(
                        default=apps.consent.utils.consent_end_date,
                        verbose_name="end date",
                    ),
                ),
                (
                    "revoked_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="revoked at"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "delivery_point",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consents",
                        to="qcd_core.deliverypoint",
                    ),
                ),
                (
                    "allows_daily_index_readings",
                    models.BooleanField(
                        default=False,
                        verbose_name="allow history of daily index readings in kWh",
                    ),
                ),
                (
                    "allows_load_curve",
                    models.BooleanField(
                        default=False,
                        verbose_name="allows history of load curve, at steps returned by Enedis",
                    ),
                ),
                (
                    "allows_max_daily_power",
                    models.BooleanField(
                        default=False,
                        verbose_name="allows historical maximum daily power in kVa or kWh ",
                    ),
                ),
                (
                    "allows_measurements",
                    models.BooleanField(
                        default=False,
                        verbose_name="allows historical measurements in kWh",
                    ),
                ),
                (
                    "allows_technical_contractual_data",
                    models.BooleanField(
                        default=False,
                        verbose_name="allows the technical and contractual data available",
                    ),
                ),
                (
                    "company",
                    models.JSONField(
                        blank=True,
                        default=None,
                        null=True,
                        validators=[apps.consent.validators.validate_company_schema],
                        verbose_name="company informations",
                    ),
                ),
                (
                    "company_representative",
                    models.JSONField(
                        blank=True,
                        default=None,
                        null=True,
                        validators=[
                            apps.consent.validators.validate_representative_schema
                        ],
                        verbose_name="company representative informations",
                    ),
                ),
                (
                    "control_authority",
                    models.JSONField(
                        blank=True,
                        default=None,
                        null=True,
                        validators=[
                            apps.consent.validators.validate_control_authority_schema
                        ],
                        verbose_name="control authority informations",
                    ),
                ),
                (
                    "is_authoritative_signatory",
                    models.BooleanField(
                        default=False,
                        verbose_name="the signatory has the authority to sign this consent",
                    ),
                ),
                (
                    "signature_location",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="signature location",
                    ),
                ),
                (
                    "signed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="signature date"
                    ),
                ),
                (
                    "contract_holder",
                    models.JSONField(
                        blank=True,
                        default=None,
                        null=True,
                        validators=[
                            apps.consent.validators.validate_contract_holder_schema
                        ],
                        verbose_name="contract holder informations",
                    ),
                ),
                (
                    "provider_assigned_id",
                    models.CharField(
                        blank=True, max_length=64, verbose_name="provider assigned id"
                    ),
                ),
            ],
            options={
                "ordering": ["provider_assigned_id", "start"],
            },
        ),
    ]
